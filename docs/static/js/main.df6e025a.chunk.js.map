{"version":3,"sources":["helpers/api.js","helpers/helper.js","components/DataTable.js","components/LineChart.js","components/DataVisualisation.js","App.js","index.js"],"names":["request","a","url","fetch","catch","error","console","data","json","adapter","Object","keys","filter","item","substring","filterValues","map","name","value","values","times","DataTable","caption","className","str","replace","length","LineChart","ticks","Set","flat","width","height","chartType","loader","type","label","options","hAxis","title","vAxis","DataVisualisation","useState","current","setCurrent","useEffect","result","TK1","getData","hAxisTitle","vAxisTitle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAAMA,EAAO,uCAAG,0CAAAC,EAAA,6DAAQC,EAAR,+BAAc,8DAAd,SACKC,MAAMD,GAAKE,OAAM,SAAAC,GAAWC,QAAQD,MAAMA,MAD/C,cACRE,EADQ,gBAEDA,EAAKC,OAFJ,mFAAH,qDCEPC,EAAU,SAAAF,GAAI,OAFC,SAAAA,GAAI,OAAIG,OAAOC,KAAKJ,GAAMK,QAAO,SAAAC,GAAI,MAA4B,QAAxBA,EAAKC,UAAU,EAAE,MAEvDC,CAAaR,GAAMS,KAAI,SAAAH,GAAI,MAAK,CAAEI,KAAMJ,EAAMK,MAAOX,EAAKM,GAAMM,OAAQC,MAAOb,EAAKM,GAAMO,W,eCwBnGC,EAtBG,SAAC,GAAD,IAAGd,EAAH,EAAGA,KAAMe,EAAT,EAASA,QAAT,OAChB,wBAAOC,UAAU,cAAjB,UACE,kCAAUD,IACV,gCACE,+BACE,wCACA,4CAGJ,gCAEIf,EAAKS,KAAI,gBDXCQ,ECWEP,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACP,+BACE,8BDbMM,ECaSP,EDbFO,EAAIC,QAAQ,KAAM,QCc/B,6BAAKP,EAAMA,EAAMQ,OAAQ,OAFlBT,Y,cCgBJU,EA7BG,SAAC,GAAc,IAAZpB,EAAW,EAAXA,KACbqB,EAAK,YAAO,IAAIC,IAAItB,EAAKS,KAAI,SAACH,GAAD,OAAUA,EAAKO,SAAOU,SAEzD,OACE,cAAC,IAAD,CACEC,MAAO,OACPC,OAAQ,QACRC,UAAU,YACVC,OAAQ,6DACR3B,KAAI,EAEA,CAAE4B,KAAM,SAAUC,MAAO,MAFzB,mBAGG7B,EAAKS,KAAI,kBAAsB,CAAEmB,KAAM,SAAUC,MAAxC,EAAGnB,YAHf,mBAKCV,EAAKS,KAAI,SAAAH,GAAI,OAAIA,EAAKK,WAE3BmB,QAAS,CACPC,MAAO,CACLC,MAAO,QACPX,SAEFY,MAAO,CACLD,MAAO,cCSFE,G,MA3BW,WACxB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,qBAAU,YACK,uCAAG,4BAAA5C,EAAA,sEACOD,IADP,OACR8C,EADQ,OAEdF,EAAWnC,EAAQqC,EAAOH,QAAQpC,KAAKwC,MAFzB,2CAAH,qDAKbC,KACC,IAGD,qCACE,oBAAIzB,UAAU,cAAd,gCACA,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CAAWhB,KAAMoC,EAASrB,QAAQ,mBAEpC,qBAAKC,UAAU,iBAAf,SACE,cAAC,EAAD,CAAW0B,WAAW,eAAeC,WAAW,eAAe3C,KAAMoC,cCtBhEQ,EAFH,kBAAM,cAAC,EAAD,KCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.df6e025a.chunk.js","sourcesContent":["const request = async ( url = 'https://reference.intellisense.io/thickenernn/v1/referencia' ) => {\n  const data = await fetch(url).catch(error => { console.error(error) })\n  return await data.json();\n};\n\nexport { request };","const filterValues = data => Object.keys(data).filter(item => item.substring(0,3) === 'TK1');\n\nconst adapter = data => filterValues(data).map(item => ({ name: item, value: data[item].values, times: data[item].times}))\n\nconst formatStr = str => str.replace(/_/g, ' ');\n\nexport { formatStr, adapter };","import React from 'react';\nimport { formatStr } from '../helpers/helper';\nimport '../assets/scss/DataTable.scss'\n\nconst DataTable = ({ data, caption }) => (\n  <table className=\"table-style\">\n    <caption>{caption}</caption>\n    <thead>\n      <tr>\n        <th>Metric</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        data.map(({ name, value }) => (\n          <tr key={name}>\n            <td>{formatStr(name)}</td>\n            <td>{value[value.length -1]}</td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n)\n\nexport default DataTable;\n","import React from 'react';\nimport { Chart } from 'react-google-charts';\n\nconst LineChart = ({ data }) => {\n  const ticks = [...new Set(data.map((item) => item.times).flat())];\n\n  return(\n    <Chart\n      width={'100%'}\n      height={'400px'}\n      chartType=\"LineChart\"\n      loader={<div>Loading Data Visualisation</div>}\n      data={[\n        [\n          { type: 'number', label: 'x' },\n          ...data.map(({ name: label }) => ({ type: 'number', label }))\n        ],\n        ...data.map(item => item.value)\n      ]}\n      options={{\n        hAxis: {\n          title: 'Times',\n          ticks\n        },\n        vAxis: {\n          title: 'Values',\n        },\n      }}\n    />\n  )\n}\n    \nexport default LineChart;","import React, { useEffect, useState } from 'react'\nimport { request } from '../helpers/api'\nimport DataTable from './DataTable';\nimport LineChart from './LineChart';\nimport '../assets/scss/DataVisualisation.scss';\nimport { adapter } from '../helpers/helper';\n\nconst DataVisualisation = () => {\n  const [current, setCurrent] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const result = await request();\n      setCurrent(adapter(result.current.data.TK1));\n    }\n    \n    getData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title-table\" >Data Visualisation</h1>\n      <div className=\"container\">\n        <div className=\"container__box\">\n          <DataTable data={current} caption=\"Current Data\" />\n        </div>\n        <div className=\"container__box\">\n          <LineChart hAxisTitle=\"Current Data\" vAxisTitle=\"Current Data\" data={current} />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default DataVisualisation;\n","import './assets/scss/App.scss';\nimport DataVisualisation from './components/DataVisualisation';\n\nconst App = () => <DataVisualisation />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}